pragma solidity ^0.5.0;
contract Contract {
address owner;
uint randNonce;
address payable [10] participants;
uint peopleCount;

constructor()public {
owner = msg.sender;
}
function selectWinner()public returns (address){
if (peopleCount ==10) {
address payable winner = participants[randomNumber()];
winner.transfer(address(this).balance);
return winner;
}}
function join()public payable {
require(msg.value ==1.0);
require (peopleCount < 10);
require (!joinedAlready(msg.sender));
participants[peopleCount] = msg.sender;
peopleCount++;
}

function randomNumber() private returns(uint) {
uint rand = uint(keccak256(abi.encodePacked(now, msg.sender, randNonce))) % 10;
randNonce++;
return rand;}function joinedAlready(address payable participant) private view returns(bool) {
for(uint i = 0; i < participants.length; i++) {
if (participants[i] == participant) {
return true;
}
}
return false;
}
}