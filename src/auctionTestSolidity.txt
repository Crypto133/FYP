pragma solidity ^0.5.0;
contract Contract {
uint public end;
address public highestBidAddress;
mapping(address => uint) public bids;
uint public bidHighest;
bool ended;


constructor(uint time,address payable _beneficiary)public {
end = now + time;
beneficiary = _beneficiary;

}
function withdraw()public {
uint amount =bid[msg.sender];
if (amount > 0){
bid[msg.sender] = 0;
msg.sender.transfer(amount);
}
function placeBid()public {
require (now <= end););
require(msg.value > bidHighest);
if (bidHighest != 0){
pendingReturns[highestBidAddress] += bidHighest) };
highestBidAddress= msg.sender;
bidHighest= msg.value;
}
function endAuction()public {
beneficiary.transfer(highestBid);
require (!ended);
ended = true;

}


}